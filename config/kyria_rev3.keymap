/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
            &kp TAB   &kp A &kp S &kp D &kp F &kp G                                                  &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT            &mo 1   &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC       &kp RET &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2              &trans &trans &trans &trans &trans &trans
            &trans &trans &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans                    &trans &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
*/


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define RAISE 1
#define LOWER 2

&mt {
    tapping-term-ms = <200>;
};

&sensors {
    left_config {
        triggers-per-rotation = <36>;
    };

    right_config {
        triggers-per-rotation = <30>;
    };
};

/ {
    behaviors {
        left_encoder_rotate: left_encoder_rotate {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PG_DN>, <&kp PG_UP>;
        };

        right_encoder_rotate: right_encoder_rotate {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&none>, <&none>;
        };

        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC         &kp Q               &kp W               &kp E               &kp R               &kp T                                                                                              &kp Y               &kp U            &kp I                  &kp O               &kp P               &kp BSPC
                &kp DEL         &kp A               &kp S               &kp D               &kp F               &kp G                                                                                              &kp H               &kp J            &kp K                  &kp L               &kp SEMI            &kp SQT
                &kp LSHFT       &kp Z               &kp X               &kp C               &kp V               &kp B                  &pht LC(LA(DEL)) LG(L)  &kp KP_NUM                  &kp LPAR    &kp RPAR    &kp N               &kp M            &kp COMMA              &kp DOT             &kp FSLH            &kp ENTER
                                                                        &none               &kp MINUS           &mo LOWER              &kp LCTRL               &kp LALT                    &kp DLLR    &kp SPACE   &mo RAISE           &kp EQUAL        &neweml
            >;
            sensor-bindings = <&left_encoder_rotate &right_encoder_rotate>;
            display-name = "QWERTY";
        };
        
        RAISE_layer {
            bindings = <
                &kp TAB         &kp N1          &kp N2             &kp N3          &kp N4          &kp N5                                                                                      &kp N6          &kp N7          &kp N8                  &kp N9              &kp N0              &trans
                &trans          &trans          &trans             &trans          &trans          &trans                                                                                      &trans          &kp LEFT        &kp DOWN                &kp UP              &kp RIGHT           &trans
                &trans          &trans          &trans             &trans          &trans          &trans          &trans          &trans                              &trans      &trans      &trans          &trans          &trans                  &trans              &trans              &trans
                                                                   &trans          &trans          &none           &trans          &pass                               &trans      &trans      &trans          &trans          &trans
            >;
            display-name = "NUMBERS";
        };

        LOWER_layer {
            bindings = <
                &trans          &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT                                                                                   &kp CARET       &kp AMPS        &kp ASTRK               &kp LPAR            &kp RPAR              &trans
                &trans          &trans          &trans          &trans          &trans          &trans                                                                                      &trans          &trans          &trans                  &trans              &trans                &trans
                &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans          &trans                              &trans      &trans      &trans          &trans          &trans                  &trans              &trans                &trans
                                                                &trans          &bt BT_CLR      &trans          &trans          &trans                              &trans      &trans      &none           &trans          &trans
            >;
            display-name = "SYMBOLS";
        };
    };
};
